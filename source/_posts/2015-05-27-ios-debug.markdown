---
layout: post
title: "ios 调试"
date: 2015-05-27 15:50:30 +0800
comments: true
categories: IOS
---
### 调试
#### 检测是否为主线程
    [NSThread isMainThread]

#### lldb 增强
```
    brew install chisel

    vim ~/.lldbinit
    command script import /usr/local/Cellar/chisel/1.1.0/libexec/fblldb.py
```

<!--more-->

#### lldb 命令
```
    print(p)
    po
    call function
    bt   Printing the Stacktrace
    expr(e) todo.title = @"Changed"
```

#### lldb 增强命令
```
    pviews  
        Print the recursive view description for the key window.    Yes Yes
    pvc 
        Print the recursive view controller description for the key window. Yes No
    visualize   
        Open a UIImage, CGImageRef, UIView, or CALayer in Preview.app on your Mac.  Yes No
    fv  
        Find a view in the hierarchy whose class name matches the provided regex.   Yes No
    fvc 
        Find a view controller in the hierarchy whose class name matches the provided regex.    Yes No
    show/hide   
        Show or hide the given view or layer. You don't even have to continue the process to see the changes!   Yes Yes
    mask/unmask 
        Overlay a view or layer with a transparent rectangle to visualize where it is.  Yes No
    border/unborder 
        Add a border to a view or layer to visualize where it is.   Yes Yes
    caflush 
        Flush the render server (equivalent to a "repaint" if no animations are in-flight).)    Yes Yes
    bmessage    
        Set a symbolic breakpoint on the method of a class or the method of an instance without worrying which class in the hierarchy actually implements the method.   Yes Yes
    wivar   
        Set a watchpoint on an instance variable of an object.  Yes Yes
    presponder  
        Print the responder chain starting from the given object.   Yes Ye
```

#### show frame
```
    p (CGRect)[uiTextFieldObj frame]
    p self.view.layer.frame
```

#### how view hierarchy.
```
    #ifdef DEBUG
      NSLog(@"Cell recursive description:\n\n%@\n\n", [cell performSelector:@selector(recursiveDescription)]);
    #endif
```

##### 显示所有视图
```
    po [[UIWindow keyWindow] recursiveDescription]
```

##### IOS8 显示单个视图
```
    po [[[UIWindow keyWindow] rootViewController] _printHierarchy]
```

##### searchbar 视图
```
    po [searchbar recursiveDescription] //查看索引树
```

#### LOG
```
//
    #ifdef DEBUG
    static const int ddLogLevel = LOG_LEVEL_VERBOSE;
    #else
    static const int ddLogLevel = LOG_LEVEL_OFF;
    #endif

    // 实例化 lumberjack
    [DDLog addLogger:[DDTTYLogger sharedInstance]];
    // 允许颜色
    [[DDTTYLogger sharedInstance] setColorsEnabled:YES];

    //lumberjack提供了四种Log方法
    DDLogError(@"错误信息"); // 红色
    DDLogWarn(@"警告"); // 橙色
    DDLogInfo(@"提示信息"); // 默认是黑色
    DDLogVerbose(@"详细信息"); // 默认是黑色

    //如果要修改Log输出的颜色可以使用如下代码
    [[DDTTYLogger sharedInstance] setForegroundColor:[UIColor blueColor] 
                                    backgroundColor:nil 
                                            forFlag:LOG_FLAG_INFO];
```
